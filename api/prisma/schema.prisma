// 1. Configuração do Gerador de Cliente
// schema.prisma
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-3.0.x", "debian-openssl-1.1.x"]
}

// 2. Configuração da Fonte de Dados
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 3. Modelos de Dados (Tradução das suas tabelas SQL)

model CARTELA {
  id_cartela        Int               @id @default(autoincrement())
  id_usuario        Int
  id_jogo           Int
  JOGO              JOGO              @relation(fields: [id_jogo], references: [id_jogo], onDelete: Cascade)
  USUARIO           USUARIO           @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
  NUMEROS_CARTELA   NUMEROS_CARTELA[]

  @@map("CARTELA")
}

model JOGO {
  id_jogo             Int                 @id @default(autoincrement())
  data_hora           DateTime            @db.DateTime(0)
  id_sala             Int
  id_usuario_vencedor Int?
  preco_cartela       Decimal             @db.Decimal(10, 2)
  CARTELA             CARTELA[]
  SALA                SALA                @relation(fields: [id_sala], references: [id_sala], onDelete: Cascade)
  USUARIO             USUARIO?            @relation(fields: [id_usuario_vencedor], references: [id_usuario], onDelete: SetNull)
  NUMEROS_SORTEADOS   NUMEROS_SORTEADOS[]
  PREMIOS             PREMIOS[]

  @@map("JOGO")
}

model NUMEROS_CARTELA {
  id_numero_cartela Int     @id @default(autoincrement())
  numero            Int
  id_cartela        Int
  CARTELA           CARTELA @relation(fields: [id_cartela], references: [id_cartela], onDelete: Cascade)

  @@map("NUMEROS_CARTELA")
}

model NUMEROS_SORTEADOS {
  id_numero_sorteado Int  @id @default(autoincrement())
  numero             Int
  ordem_sorteio      Int
  id_jogo            Int
  JOGO               JOGO @relation(fields: [id_jogo], references: [id_jogo], onDelete: Cascade)

  @@map("NUMEROS_SORTEADOS")
}

model PREMIOS {
  id_premio Int     @id @default(autoincrement())
  descricao String  @db.VarChar(255)
  valor     Decimal @db.Decimal(10, 2)
  id_usuario Int
  id_jogo    Int
  JOGO       JOGO    @relation(fields: [id_jogo], references: [id_jogo], onDelete: Cascade)
  USUARIO    USUARIO @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)

  @@map("PREMIOS")
}

model SALA {
  id_sala   Int    @id @default(autoincrement())
  nome      String @db.VarChar(100)
  descricao String? @db.Text
  JOGO      JOGO[]

  @@map("SALA")
}

model USUARIO {
  id_usuario  Int       @id @default(autoincrement())
  nome        String    @db.VarChar(255)
  email       String    @unique @db.VarChar(255)
  senha       String    @db.VarChar(255)
  creditos    Decimal   @db.Decimal(10, 2)
  is_admin    Boolean   @default(false) @db.TinyInt
  CARTELA     CARTELA[]
  JOGO        JOGO[]
  PREMIOS     PREMIOS[]

  @@map("USUARIO")
}
